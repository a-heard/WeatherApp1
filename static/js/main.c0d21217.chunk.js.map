{"version":3,"sources":["App.js","index.js"],"names":["App","state","getTime","time","Moment","utcOffset","timezone","format","setState","getWeather","zipInput","document","getElementById","value","fetch","then","response","status","json","data","console","log","zip","temperature","main","temp","tempmax","temp_max","tempmin","temp_min","city","name","description","weather","Country","sys","country","catch","error","className","type","id","placeholder","maxLength","onClick","this","React","Component","ReactDOM","render","StrictMode"],"mappings":"0PA4EeA,G,iNAtEbC,MAAQ,G,EAGVC,QAAU,WACV,IAAMC,EAAOC,MACXC,UAAU,EAAKJ,MAAMK,SAAW,IAChCC,OAAO,UACT,EAAKC,SAAS,CACbL,KAAMA,K,EAGPM,WAAa,WACb,IAAIC,EAAWC,SAASC,eAAe,YAAYC,MAEnDC,MAAM,uDAAyDJ,EAAW,6DACxEK,MAAK,SAACC,GACmB,MAApBA,EAASC,OAKbD,EAASE,OAAOH,MAAK,SAACI,GACpBC,QAAQC,IAAIF,GACZ,EAAKX,SAAS,CACZc,IAAKZ,EACLa,YAAaJ,EAAKK,KAAKC,KACvBC,QAASP,EAAKK,KAAKG,SACnBC,QAAST,EAAKK,KAAKK,SACnBC,KAAMX,EAAKY,KACXC,YAAab,EAAKc,QAAQ,GAAGD,YAC7BE,QAASf,EAAKgB,IAAIC,QAClB9B,SAAUa,EAAKb,WAEjB,EAAKJ,aAhBLkB,QAAQC,IACN,gBAAkBL,EAASC,WAmBhCoB,OAAM,SAACC,GACNlB,QAAQC,IAAI,a,uDAIf,OACC,yBAAKkB,UAAU,aACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,UAAd,kBAGF,yBAAKA,UAAU,WAER,2BAAOC,KAAK,OAAOC,GAAG,WAAWF,UAAU,eAAeG,YAAY,gBAAgBC,UAAU,MAChG,4BAAQJ,UAAU,iBAAiBK,QAASC,KAAKpC,YAAjD,WAGP,yBAAK8B,UAAU,WACb,2BAAIM,KAAK5C,MAAM6B,KAAf,MAAwBe,KAAK5C,MAAMiC,SACnC,2BAAIW,KAAK5C,MAAMsB,YAAf,WACA,2BAAIsB,KAAK5C,MAAM+B,aACf,2BAAIa,KAAK5C,MAAME,OAEjB,yBAAKoC,UAAU,Y,GA7DAO,IAAMC,YCGxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFvC,SAASC,eAAe,U","file":"static/js/main.c0d21217.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Moment from 'moment';\nimport 'moment-timezone'\n\nclass App extends React.Component {\n  state = {};\n\n\ngetTime = () => {\nconst time = Moment()\n .utcOffset(this.state.timezone / 60)\n .format(\"h:mm a\");\nthis.setState({\n time: time,\n});\n};\ngetWeather = () => {\nlet zipInput = document.getElementById(\"zipInput\").value;\n\nfetch(\"https://api.openweathermap.org/data/2.5/weather?zip=\" + zipInput + \",us&units=imperial&appid=a1e3df40f95c0b92d083b8a468d14883\")\n .then((response) => {\n   if (response.status !== 200) {\n     console.log(\n       \"Status Code: \" + response.status)\n     return;\n   }\n   response.json().then((data) => {\n     console.log(data);\n     this.setState({\n       zip: zipInput,\n       temperature: data.main.temp,\n       tempmax: data.main.temp_max,\n       tempmin: data.main.temp_min,\n       city: data.name,\n       description: data.weather[0].description,\n       Country: data.sys.country,\n       timezone: data.timezone,\n     });\n     this.getTime();\n   });\n }\n )\n .catch((error) => {\n   console.log(\"Error\");\n });\n};\nrender() {\nreturn (\n <div className=\"container\">\n   <div className=\"display-1 \">\n     <h1 className=\"Header\">Daily Weather</h1>\n   </div>\n\n   <div className=\"display\">\n\n          <input type=\"text\" id=\"zipInput\" className=\"search-input\" placeholder=\"Enter Zipcode\" maxLength='5'/>\n          <button className=\"material-icons\" onClick={this.getWeather}>search</button>\n        </div >\n   \n   <div className=\"display\">\n     <p>{this.state.city}   {this.state.Country}</p>\n     <p>{this.state.temperature} &#8457;</p>\n     <p>{this.state.description}</p>\n     <p>{this.state.time}</p>\n   </div>\n   <div className=\"bg\"></div>\n </div >\n\n \n\n);\n}\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Moment from 'moment';\nimport 'moment-timezone'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}